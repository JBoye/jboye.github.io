"use strict";
let domInputs = Array.from(document.querySelectorAll("form>input"));
let domLetters = Array.from(document.querySelectorAll("div>button"));
let domLabel = document.querySelector("h2");
let allWords;
let allLetters;
let availableLetters;
let usedLetters;
async function getWords() {
    if (!allWords)
        allWords = (await (await fetch("words.txt")).text()).split("\r\n");
}
function checkWord() {
    let validGuess = true;
    availableLetters = [...allLetters];
    usedLetters = [];
    domLetters.map(x => x.disabled = false);
    const guess = domInputs.map(x => x.value).join("").toUpperCase();
    for (let i = 0; i < guess.length; i++) {
        let index = availableLetters.indexOf(guess[i]);
        if (index > -1) {
            availableLetters.splice(index, 1);
            domLetters.find(x => x.value == guess[i] && !x.disabled).disabled = true;
            usedLetters.push(guess[i]);
        }
        else {
            validGuess = false;
        }
    }
    if (guess.length < 2) {
        domLabel.innerHTML = "&nbsp;";
    }
    else if (!validGuess) {
        domLabel.innerText = "ugyldigt gæt";
    }
    else if (!allWords.includes(guess)) {
        domLabel.innerText = guess + " findes ikke i ordbogen";
    }
    else {
        domLabel.innerText = guess + ": " + guess.length + " point";
    }
}
function shuffle(array) {
    let currentIndex = array.length, randomIndex;
    while (currentIndex != 0) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex--;
        [array[currentIndex], array[randomIndex]] = [
            array[randomIndex], array[currentIndex]
        ];
    }
    return array;
}
/*async function checkWord(){
    
    await getWords()
    //const guess = (<HTMLInputElement>document.getElementById("input")).value.toUpperCase();
    console.log(guess, words)
    if(checkGuess() && words.includes(guess)){
        alert("SCORE:\t" + guess.length)
    }else{
        alert("Computer says noooo")
    }
}*/
async function init() {
    if (document.location.hash.length == 10) {
        console.log(document.location.hash.length);
    }
    else {
    }
    await getWords();
    const vowels = { "A": 7, "E": 9, "I": 4, "O": 5, "U": 3, "Y": 2, "Æ": 2, "Ø": 2, "Å": 2 };
    const consonants = { "B": 4, "C": 2, "D": 5, "F": 3, "G": 3, "H": 2, "J": 2, "K": 4, "L": 5, "M": 3, "N": 7, "P": 2, "Q": 0, "R": 7, "S": 6, "T": 6, "V": 3, "W": 0, "X": 1, "Z": 1 };
    var arr1 = [];
    for (const letter in vowels) {
        for (let i = 0; i < vowels[letter]; i++) {
            arr1.push(letter);
        }
    }
    var arr2 = [];
    for (const letter in consonants) {
        for (let i = 0; i < consonants[letter]; i++) {
            arr2.push(letter);
        }
    }
    shuffle(arr1);
    shuffle(arr2);
    allLetters = [...arr1.slice(0, 4), ...arr2.slice(0, 5)]; //(at least three vowels and four consonants)
    shuffle(allLetters);
    domLetters.map((x, i) => x.innerText = x.value = allLetters[i]);
    domInputs.map(x => x.addEventListener("input", e => onInput(e)));
    domInputs.map(x => x.addEventListener("keydown", onKeyDown));
    //document.getElementById("input").oninput = e => checkGuess()
    //document.forms[0].onsubmit = checkWord     
    document.querySelector("body>button").onclick = cheat;
}
function onKeyDown(e) {
    const index = domInputs.indexOf(e.target);
    if (e.key == "Backspace" && !domInputs[index].value && domInputs[index - 1]) {
        domInputs[index - 1].value = "";
        domInputs[index - 1].focus();
    }
    console.log(e);
    checkWord();
}
function onInput(e) {
    const index = domInputs.indexOf(e.target);
    if (e.inputType == "insertText") {
        domInputs[index + 1]?.focus();
    }
    else if (e.inputType == "deleteContentBackward") {
        domInputs[index - 1]?.focus();
    }
    console.log(index, e);
    checkWord();
}
async function cheat() {
    try {
        await navigator.share({ text: "Kan du stikke X point?", url: 'https://codepen.io/ayoisaiah/pen/YbNazJ' });
    }
    catch (error) {
        console.log("cancelled share dialog");
    }
    await getWords();
    const result = allWords.filter(x => checkGuess2(x)).sort((a, b) => b.length - a.length);
    console.log(result.slice(0, 10).map(x => x + ": " + x.length));
}
function checkGuess2(guess) {
    guess = guess.trim();
    availableLetters = [...allLetters];
    for (let i = 0; i < guess.length; i++) {
        let index = availableLetters.indexOf(guess[i]);
        if (index > -1) {
            availableLetters.splice(index, 1);
        }
        else {
            return false;
        }
    }
    return true;
}
init();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4vc3JjLyIsInNvdXJjZXMiOlsiaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUksU0FBUyxHQUFzQixLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFBO0FBQ3RGLElBQUksVUFBVSxHQUF1QixLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFBO0FBRXhGLElBQUksUUFBUSxHQUFzQixRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFBO0FBRTlELElBQUksUUFBaUIsQ0FBQztBQUV0QixJQUFJLFVBQW1CLENBQUM7QUFDeEIsSUFBSSxnQkFBeUIsQ0FBQztBQUM5QixJQUFJLFdBQW9CLENBQUM7QUFJekIsS0FBSyxVQUFVLFFBQVE7SUFDdEIsSUFBRyxDQUFDLFFBQVE7UUFBRSxRQUFRLEdBQUcsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUNqRixDQUFDO0FBRUQsU0FBUyxTQUFTO0lBQ2pCLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQTtJQUNyQixnQkFBZ0IsR0FBRyxDQUFDLEdBQUksVUFBVSxDQUFDLENBQUE7SUFDbkMsV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUNqQixVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsQ0FBQTtJQUN2QyxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJ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