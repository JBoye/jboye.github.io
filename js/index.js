import { GetLongestWords } from "./Cheater.js";
import { GetRandomLetters } from "./RandomLetters.js";
import { GetWordList, wordList } from "./Words.js";
const letters = GetRandomLetters();
let domLetters = Array.from(document.querySelectorAll("#letters>button"));
let domWord = Array.from(document.querySelectorAll("#word>button"));
let domLabel = document.querySelector("h2");
let guess = "";
async function init() {
    console.log("init");
    domLetters.map((x, i) => x.innerText = letters[i]);
    domLetters.map(x => x.addEventListener("click", letterClick));
    domWord.map(x => x.addEventListener("click", letterClick));
    document.querySelector("body>button").onclick = e => domLabel.innerText = GetLongestWords(letters).join(", ");
    await GetWordList();
}
function letterClick(e) {
    let index = domLetters.indexOf(e.target);
    if (index > -1 && !domLetters[index].disabled) {
        domLetters[index].disabled = true;
        domWord[guess.length].innerText = domLetters[index].innerText;
    }
    index = domWord.indexOf(e.target);
    if (index > -1 && domWord[index].innerText) {
        domLetters.find(x => x.innerText == domWord[index].innerText && x.disabled).disabled = false;
        domWord[index].innerText = "";
    }
    guess = domWord.map(x => x.innerText).join("");
    domWord.map((x, i) => x.innerText = guess[i] || "");
    console.log(wordList.includes(guess));
    checkGuess();
}
function checkGuess() {
    if (guess.length < 2) {
        domLabel.innerHTML = "&nbsp;";
    }
    else if (!wordList.includes(guess)) {
        domLabel.innerText = guess + " findes ikke i ordbogen";
    }
    else {
        domLabel.innerText = guess + ": " + guess.length + " point";
    }
}
init();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiLi4vc3JjLyIsInNvdXJjZXMiOlsiaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGNBQWMsQ0FBQTtBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQTtBQUNyRCxPQUFPLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQTtBQUVsRCxNQUFNLE9BQU8sR0FBRyxnQkFBZ0IsRUFBRSxDQUFBO0FBRWxDLElBQUksVUFBVSxHQUF1QixLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUE7QUFDN0YsSUFBSSxPQUFPLEdBQXVCLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUE7QUFDdkYsSUFBSSxRQUFRLEdBQXNCLFFBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUE7QUFFOUQsSUFBSSxLQUFLLEdBQVUsRUFBRSxDQUFBO0FBRXJCLEtBQUssVUFBVSxJQUFJO0lBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNuQixVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtJQUNsRCxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFBO0lBQzdELE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUE7SUFFMUQsUUFBUSxDQUFDLGFBQWEsQ0FBb0IsYUFBYSxDQUFDLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFNBQVMsR0FBRyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ2hJLE1BQU0sV0FBVyxFQUFFLENBQUE7QUFDdkIsQ0FBQztBQUVELFNBQVMsV0FBVyxDQUFDLENBQU87SUFDeEIsSUFBSSxLQUFLLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBb0IsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFBO0lBRTNELElBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLFFBQVEsRUFBQztRQUN6QyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQTtRQUNqQyxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFNBQVMsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxDQUFBO0tBQ2hFO0lBRUQsS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQW9CLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQTtJQUNwRCxJQUFHLEtBQUssR0FBRyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsU0FBUyxFQUFDO1FBRXRDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUE7UUFDNUYsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUE7S0FDaEM7SUFFRCxLQUFLLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUEsRUFBRSxDQUFBLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUE7SUFDNUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFBO0lBQ25ELE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO0lBQ3JDLFVBQVUsRUFBRSxDQUFBO0FBQ2hCLENBQUM7QUFFRCxTQUFTLFVBQVU7SUFDZixJQUFHLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFDO1FBQ3RCLFFBQVEsQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFBO0tBQzdCO1NBQUssSUFBRyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUM7UUFDbEMsUUFBUSxDQUFDLFNBQVMsR0FBRyxLQUFLLEdBQUcseUJBQXlCLENBQUE7S0FDdEQ7U0FBSTtRQUNKLFFBQVEsQ0FBQyxTQUFTLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxLQUFLLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQTtLQUMzRDtBQUVGLENBQUM7QUFFRCxJQUFJLEVBQUUsQ0FBQSJ9